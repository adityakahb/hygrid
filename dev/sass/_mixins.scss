@mixin hygrid_borderbox() {
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}
@mixin hygrid_clearfix() {
    &:after{
        clear: both;
        content: '';
        display: table;
    }
}

@function hygridCalculate($a, $b){
  @return ($a/$b * 100) + %;
}

@mixin hcol-widths($prefix: ''){
    @for $i from 1 through $hygrid-columns {
        .#{$hygrid-column-prefix}-#{$prefix}-#{$i} {
            width: hygridCalculate($i, $hygrid-columns);
        }
    }
}
@mixin createHygrid(){
    @include hcol-widths('xs');
    .#{$hygrid-grid-prefix}-gutter > .#{$hygrid-column-prefix}-item,
    .#{$hygrid-grid-prefix}-centered-gutter > .#{$hygrid-column-prefix}-item{
        padding-left: $xs-gutter;
        padding-right: $xs-gutter;
    }
    @media (min-width: $sm-min) {
        @include hcol-widths('sm');
        .#{$hygrid-grid-prefix}-gutter > .#{$hygrid-column-prefix}-item,
        .#{$hygrid-grid-prefix}-centered-gutter > .#{$hygrid-column-prefix}-item{
            padding-left: $sm-gutter;
            padding-right: $sm-gutter;
        }
    }
    @media (min-width: $md-min) {
        @include hcol-widths('md');
        .#{$hygrid-grid-prefix}-gutter > .#{$hygrid-column-prefix}-item,
        .#{$hygrid-grid-prefix}-centered-gutter > .#{$hygrid-column-prefix}-item{
            padding-left: $md-gutter;
            padding-right: $md-gutter;
        }
    }
    @media (min-width: $lg-min) {
        @include hcol-widths('lg');
        .#{$hygrid-grid-prefix}-gutter > .#{$hygrid-column-prefix}-item,
        .#{$hygrid-grid-prefix}-centered-gutter > .#{$hygrid-column-prefix}-item{
            padding-left: $lg-gutter;
            padding-right: $lg-gutter;
        }
    }
}